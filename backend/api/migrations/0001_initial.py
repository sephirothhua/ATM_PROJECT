# Generated by Django 2.1.7 on 2019-02-14 01:12

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=10, unique=True, verbose_name='姓名')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
                'verbose_name': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AlertLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camera_id', models.CharField(max_length=128, verbose_name='摄像机id')),
                ('position', models.CharField(max_length=128, verbose_name='位置')),
                ('longitude', models.CharField(max_length=128, verbose_name='经度')),
                ('latitude', models.CharField(max_length=128, verbose_name='纬度')),
                ('video', models.CharField(max_length=128, verbose_name='视频')),
                ('mask_status', models.SmallIntegerField(default=0, max_length=10, verbose_name='戴面具')),
                ('glass_status', models.SmallIntegerField(default=0, max_length=10, verbose_name='戴墨镜')),
                ('follow_status', models.SmallIntegerField(default=0, max_length=10, verbose_name='跟随')),
                ('leave_status', models.SmallIntegerField(default=0, max_length=10, verbose_name='遗留物')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='日期')),
            ],
            options={
                'verbose_name_plural': '异常日志',
                'verbose_name': '异常日志',
            },
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('position', models.CharField(max_length=128, verbose_name='位置')),
                ('latitude', models.CharField(max_length=128, verbose_name='纬度')),
                ('longitude', models.CharField(max_length=128, verbose_name='经度')),
                ('rstp', models.CharField(max_length=128, verbose_name='rstp')),
                ('status', models.SmallIntegerField(default=0, max_length=10, verbose_name='状态')),
                ('is_alert', models.SmallIntegerField(default=0, max_length=10, verbose_name='是否报警')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
            ],
            options={
                'verbose_name_plural': '设备',
                'verbose_name': '设备',
            },
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=128, verbose_name='错误描述')),
                ('type', models.SmallIntegerField(max_length=10, verbose_name='类型')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
            ],
            options={
                'verbose_name_plural': '错误日志',
                'verbose_name': '错误日志',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.CharField(max_length=128, verbose_name='图片路径')),
                ('status', models.SmallIntegerField(max_length=10, verbose_name='状态')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建日期')),
                ('camera', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Camera', verbose_name='摄像机id')),
            ],
            options={
                'verbose_name_plural': '日志',
                'verbose_name': '日志',
            },
        ),
    ]
